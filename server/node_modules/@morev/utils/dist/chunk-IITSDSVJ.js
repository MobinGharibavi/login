import {
  formatInfinity
} from "./chunk-TDPEW6GZ.js";
import {
  assert
} from "./chunk-JAZU2HBO.js";
import {
  isNullish
} from "./chunk-XDUT4IRC.js";
import {
  isNumeric
} from "./chunk-OBG63REY.js";

// src/ranges/ranges-sort/ranges-sort.ts
var comparator = (a, b) => {
  if (isNullish(a) && isNullish(b))
    return 0;
  if (isNullish(a) && !isNullish(b))
    return -1;
  if (!isNullish(a) && isNullish(b))
    return 1;
  assert(isNumeric(a) && isNumeric(b));
  if (a < b)
    return -1;
  if (a > b)
    return 1;
  return 0;
};
var rangesSort = (ranges, infinityToNull = false) => {
  return [...ranges ?? []].filter((r) => !isNullish(r)).sort((r1, r2) => {
    assert(!isNullish(r1) && !isNullish(r2));
    if (r1[0] === r2[0]) {
      return comparator(r1[1], r2[1]);
    }
    return comparator(r1[0], r2[0]);
  }).map((range) => [
    formatInfinity(range[0], infinityToNull),
    formatInfinity(range[1], infinityToNull)
  ]);
};

export {
  rangesSort
};
